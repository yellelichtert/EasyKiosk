@using System.Reflection.Metadata
@using EasyKiosk.Client.Manager
@using EasyKiosk.Core.Model.Enums

@page "/"


@inject ConnectionManager ConnectionManager
@inject NavigationManager NavigationManager


<div class="d-flex w-100 flex-grow-1 align-items-center justify-content-center bg-warning-xs bg-dark-sm bg-info-md bg-light-xl">
    
    
    <div class="d-flex flex-column w-75 h-50 card shadow justify-content-center align-items-center">
        
        <div class="d-flex w-50 flex-grow align-items-center justify-content-center text-center">
            <h1>Logo</h1>
        </div>

       
        <div class="d-flex flex-column w-75 p-5">

            @if (_isInitialSetup)
            {
                <h3>Let's get started.....</h3>
                <p>To connect to the server, you'll need to fill in the server adres....</p>

                if (_isRegistering)
                {
                    <p>Registering device.... please continue on the server</p>
                }
                else
                {
                    <EditForm Model="_input" Class="d-flex flex-column justify-content-between" FormName="ConnectionSettings">
                
                
                        <div class="d-flex justify-content-between">
                            <div class="col">
                                <label>Ip adress:</label>
                                <TextInput @bind-Value="_input.IpAddress"></TextInput>
                            </div>
                
                            <div class="col-3">
                                <label>Port:</label>
                                <InputNumber @bind-Value="_input.Port"></InputNumber>
                            </div>
                        </div>
                
                
                        <div class="d-flex align-items-end">
                            <button type="button" @onclick="(HandleRegistration)">Connect</button>
                        </div>
                    </EditForm>
                }
            }
            else if (!_hasErrors)
            {
                <h3> Logging in.....</h3>
            }
            else
            {
                <h3>@_errorMessage</h3>
            }
            
            
            
        </div>
        
    </div>
    
        
        
</div>



@code {

    private Input _input = new Input();

    private bool _isInitialSetup;
    private bool _isRegistering;
    private bool _hasErrors;
    private string _errorMessage;


    protected override async Task OnInitializedAsync()
    {
        try
        {
            Console.WriteLine("Initilizing setup");
        
            await base.OnInitializedAsync();

            _isInitialSetup = ConnectionManager.IsInitialSetup();
            if (!_isInitialSetup)
            {
                await HandleLogin();
            }
            
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }

    }


    private async Task HandleRegistration()
    {
        _isRegistering = true;
        await ConnectionManager.RegisterAsync(_input.IpAddress, _input.Port);
        _isRegistering = false;

        await HandleLogin();
    }


    private async Task HandleLogin()
    {
        var deviceType =  await ConnectionManager.LoginAsync();

        if (deviceType == DeviceType.Kiosk)
        {
            NavigationManager.NavigateTo("/Kiosk");
        }
        else
        {
            NavigationManager.NavigateTo("/Receiver");
        }
    }



    private class Input
    {
        public string IpAddress { get; set; }
        public int Port { get; set; }
    }
    
}