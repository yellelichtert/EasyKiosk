@page "/Menu"
@rendermode InteractiveServer

@using Blazor.Bootstrap.Icons.Components
@using EasyKiosk.Server.Manager.Components
@using Blazored.FluentValidation
@using EasyKiosk.Core.Entities


@code {

}


<Popup @ref="_popup" OnCloseHandler="@OnPopupClose">
    @if (_selectedProduct is not null || _selectedCategory is not null)
    {
            <div class="d-flex flex-row">
                
                @if (_selectedProduct is not null)
                {
                    <EditForm Model=@_selectedProduct class="p-1 col-6" OnValidSubmit="HandleProductSubmit">
                    
                        <div class="d-flex flex-column  my-1">
                            <label for="Name">Name</label>
                            <InputText id="Name" @bind-Value="_selectedProduct.Name"/>
                        </div>

                        <div class="d-flex flex-column mb-1">
                            <label for="ProductPrice">Price</label>
                            <InputNumber id="ProductPrice" @bind-Value="_selectedProduct.Price"/>
                        </div>

                        <div class="d-flex flex-column mb-1">
                            <label for="">Category</label>
                            <InputSelect @bind-Value="_selectedProduct.CategoryId">
                                @if (_selectedProduct.CategoryId == Guid.Empty)
                                {
                                    <option selected value="0">Select A Category....</option>
                                }
                                else
                                {
                                    <option selected value="@_selectedProduct.CategoryId">@_menuService.GetCategoryName(_selectedProduct.CategoryId)</option>
                                }
                                @foreach (var category in _menuService.GetCategories())
                                {
                                    if (category.Id != _selectedProduct.CategoryId)
                                    {
                                        <option value="@category.Id">@category.Name</option>
                                    }
                                }
                            </InputSelect>
                        </div>

                        <div class="d-flex flex-column mb-1">
                            <label for="ProductDescription">Description</label>
                            <InputTextArea id="ProductDescription" @bind-Value="_selectedProduct.Description"/>
                        </div>

                        <input type="submit" class="btn btn-primary">@(_formLoading ? "Loading" : "Create")
                        
                    </EditForm>
                }
                else if (_selectedCategory is not null)
                { 
                    <EditForm Model=@_selectedCategory class="d-flex flex-grow-1 flex-column" OnValidSubmit="HandleCategorySubmit">
                        
                            
                        <div class="d-flex my-1">
                            <label for="Name">Name</label>
                            <InputText id="Name" @bind-Value="_selectedCategory.Name"/>
                            </div>

                            <EditableList ItemSource="@_selectedCategory.Products" AddSource="@GetProductsExcludeCategory(_selectedCategory)"/>
                  
                            
                        <input type="submit" class="btn btn-primary">@(_formLoading ? "Loading" : "Create")
                </EditForm>
                }
                
                
                @* Image selection *@
                <div class="container-fluid d-flex flex-column justify-content-between mx-1 h-25">
                    
                   
                        @if (_imgLoading)
                        {
                            <p>Uploading....</p>
                        }
                        else if (_formImgPath == null && string.IsNullOrEmpty(_selectedProduct != null ? _selectedProduct?.Img : _selectedCategory.Img))
                        {
                            <p>Upload an image....</p>
                        }
                        else if (_formImgPath is not null)
                        {
                            <img src="@_formImgPath" class="img-thumbnail@(_selectedCategory != null? "mh-100" : "mw-100")"   alt="Uploaded image"/> 
                        }
                        else
                        {
                            <img src="@(_selectedProduct != null ? _selectedProduct.Img : _selectedCategory!.Img)" class="img-thumbnail mh-100"   alt="Uploaded image"/> 
                        }
                  
                    
                    
                        <InputFile OnChange="LoadImage" accept=".jpg, .jpeg, .png, .svg"/>
                </div>
                
            </div>
        // </EditForm>
    }
    
</Popup>


    @* Product table & Statcards *@
    <div class="col-9 d-flex flex-column">

        @* Statcards *@
        <div class="h-25 p-5 d-flex justify-content-evenly" style="z-index: inherit">
            
            <StatCard Value="@_menuService.GetProducts().Count()">Total Products: </StatCard>
            <StatCard Value="@_menuService.GetCategories().Count()">Total Categories: </StatCard>
            <StatCard Value="@("xx")">XXXXXXXX: </StatCard>
            <StatCard Value="@("xx")">XXXXXXXX: </StatCard>
            
        </div>

        
        <div class="flex-grow-1 p-5">
            <EntityList CreateHandler="@OpenProductForm" DeleteHandler="@DeleteCheckedProducts">
                <table class="table">
                    <thead>
                    <tr>
                        <th/>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Price</th>
                        <th>Category</th>
                        <th/>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (Product product in _menuService.GetProducts())
                    {
                        <tr>
                            <td><input @key="product.Id" type="checkbox" onchange=@(() => ProductCheckboxHandler(product))></td>
                            <td>@product.Name</td>
                            <td>@product.Description</td>
                            <td>@product.Price</td>
                            <td>@_menuService.GetCategoryName(product.CategoryId)</td>
                            <td><button class="btn btn-warning text-white" onclick="@(() => OpenProductForm(product))"><BiPencilSquare/></button></td>
                        </tr>
                    }
                    </tbody>
                </table>
            </EntityList>
        </div>
        
    </div>


    @* Category List *@
    <div class="d-flex p-5 col-3">
        
        <EntityList CreateHandler="@OpenCategoryForm">
            
            
            @foreach (var category in _menuService.GetCategories())
            {
                <div class="border-bottom-2 d-flex justify-content-between py-1 px-2">
                    
                    <p>@category.Name</p>
                    
                    <div class="d-flex">
                        <p>@category.Products.Count</p>
                        <td><button class="btn btn-warning text-white" onclick="@(() => OpenCategoryForm(category))"><BiPencilSquare/></button></td>
                    </div>
                    
                </div>
            }
            
            
        </EntityList>
        
        
    </div>



<Notifier @ref="_notifier"/>
    
    




