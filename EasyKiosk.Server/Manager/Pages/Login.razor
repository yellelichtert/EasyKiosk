@using System.ComponentModel.DataAnnotations
@using EasyKiosk.Server.Manager.Layout
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity

@page "/Login"
@layout EmptyLayout

@inject SignInManager<IdentityUser> SignInManager
@inject NavigationManager NavigationManager

<PageTitle>Log in</PageTitle>

<div class="d-flex flex-grow-1 w-100 vh-100 align-items-center justify-content-center">
    
    <div class="d-flex p-5 w-50 card shadow align-items-center justify-content-center">
        
        <h1>Login</h1>

        <section> 
            <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login"> 
                <DataAnnotationsValidator/> 
                <ValidationSummary class="text-danger" role="alert"/> 
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.userName" id="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="username"/> 
                        <label for="Input.Email" class="form-label">Username</label> 
                        <ValidationMessage For="() => Input.userName" class="text-danger"/> 
                    </div> 
                
                <div class="form-floating mb-3"> 
                    <InputText type="password" @bind-Value="Input.Password" id="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password"/> 
                    <label for="Input.Password" class="form-label">Password</label> 
                    <ValidationMessage For="() => Input.Password" class="text-danger"/> 
                </div> 
                
                <div class="checkbox mb-3"> 
                    <label class="form-label">
                         <InputCheckbox @bind-Value="Input.RememberMe" class="darker-border-checkbox form-check-input"/>
                        Remember me
                    </label> 
                </div> 
                
                <div> 
                    <button type="submit" class="w-100 btn btn-lg btn-primary">Log in</button> 
                </div> 
                
            </EditForm> 
            </section> 
    </div>
    
    
</div>


@code {
    
    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery] private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            await SignInManager.SignOutAsync();
        }
    }

    public async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(Input.userName, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/");
        }
    }

    private sealed class InputModel
    {
        [Required] public string userName { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")] public bool RememberMe { get; set; }
    }

}